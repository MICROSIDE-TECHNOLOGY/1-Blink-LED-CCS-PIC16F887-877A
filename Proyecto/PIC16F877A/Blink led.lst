CCS PCM C Compiler, Version 5.115d, 1               29-ago.-23 13:39
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\victo\OneDrive\Documentos\X-TRAINER-hands-on\CCS\PIC16F\1-Blink-LED-CCS-PIC16F887-877A\Proyecto\PIC16F877A\Blink led.lst

               ROM used:   61 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... /************************************************************************************************
.................... Company:
.................... Microside Technology Inc.
.................... File Name:
.................... Blink led.c
.................... Product Revision  :  1
.................... Device            :  X-TRAINER
.................... Driver Version    :  1.0
.................... ************************************************************************************************/
.................... 
.................... /*
.................... ---------------------------------------------------------------------------
.................... La práctica consiste en controlar el encendido y apagado del LED incluido
.................... en la tarjeta X-TRAINER
.................... ---------------------------------------------------------------------------
.................... */
.................... 
.................... #include <16F877A.h>                //Incluye el microcontrolador con el que se va a trabajar 
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #use delay(clock=20Mhz, crystal)    //Tipo de oscilador y frecuencia dependiendo del microcontrolador 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
.................... 
.................... #define LED PIN_A1                  //Pin donde está conectado el LED del X-TRAINER
.................... 
.................... void main(void) {
0018:  MOVF   03,W
0019:  ANDLW  1F
001A:  MOVWF  03
001B:  BSF    03.5
001C:  BSF    1F.0
001D:  BSF    1F.1
001E:  BSF    1F.2
001F:  BCF    1F.3
0020:  MOVLW  07
0021:  MOVWF  1C
0022:  BCF    03.7
....................    set_tris_a(0xFD);                //Pin RA1 como salida
0023:  MOVLW  FD
0024:  MOVWF  05
....................      
....................    while(1) {
....................       output_HIGH (LED);            //Cambio de estado en el pin RA1
0025:  BCF    05.1
0026:  BCF    03.5
0027:  BSF    05.1
....................       delay_ms (500);               //Retardo
0028:  MOVLW  02
0029:  MOVWF  21
002A:  MOVLW  FA
002B:  MOVWF  22
002C:  CALL   004
002D:  DECFSZ 21,F
002E:  GOTO   02A
....................       output_LOW (LED);             //Cambio de estado en el pin RA1     
002F:  BSF    03.5
0030:  BCF    05.1
0031:  BCF    03.5
0032:  BCF    05.1
....................       delay_ms (500) ;              //Retardo
0033:  MOVLW  02
0034:  MOVWF  21
0035:  MOVLW  FA
0036:  MOVWF  22
0037:  CALL   004
0038:  DECFSZ 21,F
0039:  GOTO   035
003A:  BSF    03.5
003B:  GOTO   025
....................    }
.................... }
003C:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
